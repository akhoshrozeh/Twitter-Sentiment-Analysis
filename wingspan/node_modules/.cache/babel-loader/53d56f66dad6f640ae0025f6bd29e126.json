{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\estee\\\\Documents\\\\Petstagram\\\\src\\\\Profile.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './profile.css';\nimport PostFeed from './PostFeed.js';\nimport Comment_Reaction from './comment_reaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //username: this.props.match.params.username,\n      //user: {username: ''},\n      //self: {username: ''},\n      user: this.props.location.user,\n      // user should have all of its posts\n      self: this.props.location.self,\n\n      /*testSelf: {username: ''},\r\n      testUser: {username: ''},*/\n      //posts: [{text: 'hello'}, {text: 'meow'}],\n      posts: []\n    };\n    /*if (this.state.user) {\r\n        this.setState({posts: this.state.user.posts})\r\n    }*/\n  } // retrieve self and user here\n\n  /*retrieveSelf() {\r\n      fetch(\"http://localhost:3001/self\")\r\n  .then(response => response.json())\r\n  .then(response => this.setState({ testSelf: response }))\r\n          //.then(response => console.log(this.state.self));\r\n  };\r\n  retrieveUser() {\r\n      const username = this.props.match.params.username;\r\n      console.log(username);\r\n      fetch(`http://localhost:3001/profiles/${username}`)\r\n          .then(response => response.json())\r\n          .then(response => this.setState({ testUser: response }))\r\n          //.then(data => console.log(data));\r\n  };*/\n\n  /*componentDidMount() {\r\n      //this.retrieveSelf();\r\n      this.retrieveUser();\r\n      //this.setState({user: {username: 'meowmeow'}});\r\n      console.log(this.state.user);\r\n      //console.log(this.state.self);\r\n  };*/\n\n  /*addFollower() {\r\n      if (this.state.user.username === this.state.self.username) {\r\n          return;\r\n      }\r\n      fetch('http://localhost:3001/profiles', {\r\n          method: 'PUT',\r\n          body: { user: this.state.user, self: this.state.self }\r\n      })\r\n      // call express patch function or whatever\r\n  }*/\n\n\n  retrievePosts() {\n    /*for (let i = 0; i < this.state.user.posts.length; i++) {\r\n        postID = this.state.user.posts[i];\r\n        fetch(`http://localhost:3001/posts/${postID}`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState({posts: posts.concat(res)}))\r\n    }*/\n    const username = this.state.user.username;\n    fetch(`http://localhost:3001/posts/${username}`).then(response => response.json()).then(response => this.setState({\n      posts: response\n    }));\n  }\n\n  componentDidMount() {\n    /*this.retrieveUser();\r\n    console.log(this.state.testUser);*/\n    this.retrievePosts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"profile-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.user.username, \"'s posts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"profPosts\",\n        children: this.state.posts.map(post => /*#__PURE__*/_jsxDEV(Comment_Reaction, {\n          post: post,\n          noComments: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 56\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*function ProfilePic(props) {\r\n    return (\r\n        <img>{props}</img>\r\n    );\r\n}*/\n\n/*function ProfileDescription(props) {\r\n    return (\r\n        <div>\r\n            <p>{props.children}</p>\r\n        </div>\r\n    );\r\n}*/\n\n/*\r\nPlanning out how profiles are created/managed (if we have a creation feature)\r\nupon sign up, put in a bunch of fields\r\nadd a Profile component to backend and somehow mark the profile as the user's?\r\nwhen profile button at the top is clicked, send to that user's profile\r\n*/\n\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/estee/Documents/Petstagram/src/Profile.js"],"names":["React","Component","ReactDOM","PostFeed","Comment_Reaction","Profile","constructor","props","state","user","location","self","posts","retrievePosts","username","fetch","then","response","json","setState","componentDidMount","render","map","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,OAAN,SAAsBL,KAAK,CAACC,SAA5B,CAAsC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACA;AACA;AACAC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,QAAX,CAAoBD,IAJjB;AAIuB;AAChCE,MAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWG,QAAX,CAAoBC,IALjB;;AAMT;AACZ;AACY;AACAC,MAAAA,KAAK,EAAE;AATE,KAAb;AAWA;AACR;AACA;AACK,GAjBiC,CAkBlC;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIC,EAAAA,aAAa,GAAG;AACZ;AACR;AACA;AACA;AACA;AACA;AACQ,UAAMC,QAAQ,GAAG,KAAKN,KAAL,CAAWC,IAAX,CAAgBK,QAAjC;AACAC,IAAAA,KAAK,CAAE,+BAA8BD,QAAS,EAAzC,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI,KAAKE,QAAL,CAAc;AAACP,MAAAA,KAAK,EAAEK;AAAR,KAAd,CAFtB;AAGH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB;AACR;AACQ,SAAKP,aAAL;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA,8BACI;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,qBAAK,KAAKb,KAAL,CAAWC,IAAX,CAAgBK,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,kBACS,KAAKN,KAAL,CAAWI,KAAX,CAAiBU,GAAjB,CAAqBC,IAAI,iBAAK,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAEA,IAAxB;AAA8B,UAAA,UAAU,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAA9B;AADT;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AApFiC;AAuFtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAelB,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './profile.css';\r\nimport PostFeed from './PostFeed.js'\r\nimport Comment_Reaction from './comment_reaction';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //username: this.props.match.params.username,\r\n            //user: {username: ''},\r\n            //self: {username: ''},\r\n            user: this.props.location.user, // user should have all of its posts\r\n            self: this.props.location.self,\r\n            /*testSelf: {username: ''},\r\n            testUser: {username: ''},*/\r\n            //posts: [{text: 'hello'}, {text: 'meow'}],\r\n            posts: [],\r\n        }\r\n        /*if (this.state.user) {\r\n            this.setState({posts: this.state.user.posts})\r\n        }*/\r\n    }\r\n    // retrieve self and user here\r\n    /*retrieveSelf() {\r\n        fetch(\"http://localhost:3001/self\")\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(response => this.setState({ testSelf: response }))\r\n            //.then(response => console.log(this.state.self));\r\n    };\r\n    retrieveUser() {\r\n        const username = this.props.match.params.username;\r\n        console.log(username);\r\n        fetch(`http://localhost:3001/profiles/${username}`)\r\n            .then(response => response.json())\r\n            .then(response => this.setState({ testUser: response }))\r\n            //.then(data => console.log(data));\r\n    };*/\r\n    /*componentDidMount() {\r\n        //this.retrieveSelf();\r\n        this.retrieveUser();\r\n        //this.setState({user: {username: 'meowmeow'}});\r\n        console.log(this.state.user);\r\n        //console.log(this.state.self);\r\n    };*/\r\n\r\n    /*addFollower() {\r\n        if (this.state.user.username === this.state.self.username) {\r\n            return;\r\n        }\r\n        fetch('http://localhost:3001/profiles', {\r\n            method: 'PUT',\r\n            body: { user: this.state.user, self: this.state.self }\r\n        })\r\n        // call express patch function or whatever\r\n    }*/\r\n\r\n    retrievePosts() {\r\n        /*for (let i = 0; i < this.state.user.posts.length; i++) {\r\n            postID = this.state.user.posts[i];\r\n            fetch(`http://localhost:3001/posts/${postID}`)\r\n                .then(res => res.json())\r\n                .then(res => this.setState({posts: posts.concat(res)}))\r\n        }*/\r\n        const username = this.state.user.username;\r\n        fetch(`http://localhost:3001/posts/${username}`)\r\n            .then(response => response.json())\r\n            .then(response => this.setState({posts: response}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        /*this.retrieveUser();\r\n        console.log(this.state.testUser);*/\r\n        this.retrievePosts();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"profile-page\">\r\n                <div class=\"user-info\">\r\n                    <div className=\"profile-picture\" />\r\n                    <h2>{this.state.user.username}'s posts</h2>\r\n                </div>\r\n                <div class=\"profPosts\" >\r\n                        {this.state.posts.map(post => (<Comment_Reaction post={post} noComments={false}></Comment_Reaction>))}\r\n                     </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n/*function ProfilePic(props) {\r\n    return (\r\n        <img>{props}</img>\r\n    );\r\n}*/\r\n\r\n/*function ProfileDescription(props) {\r\n    return (\r\n        <div>\r\n            <p>{props.children}</p>\r\n        </div>\r\n    );\r\n}*/\r\n\r\n\r\n\r\n/*\r\nPlanning out how profiles are created/managed (if we have a creation feature)\r\nupon sign up, put in a bunch of fields\r\nadd a Profile component to backend and somehow mark the profile as the user's?\r\nwhen profile button at the top is clicked, send to that user's profile\r\n*/\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}