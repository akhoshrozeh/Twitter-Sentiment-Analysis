{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\estee\\\\Documents\\\\Petstagram\\\\src\\\\signin.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport logo from './logo.JPG';\nimport './signin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signin extends React.Component {\n  /*constructor(props) {\r\n  \tsuper(props);\r\n  \tthis.state = {\r\n  \t\tusername: '',\r\n  \t\tpassword: '',\r\n  \t\tuser: '',\r\n  \t\tpw: '',\r\n  \t}\r\n  \tthis.handleChange = this.handleChange.bind(this);\r\n  \tthis.handleChangeP = this.handleChangeP.bind(this);\r\n  \tthis.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  \n  handleChange(e) {\r\n  \tthis.setState({username: e.target.value})\r\n  }\r\n  \r\n  handleChangeP(e) {\r\n  \tthis.setState({password: e.target.value})\r\n  }\r\n  \n  saveSelf() {\r\n  \tconst data = {\r\n  \t\tusername: this.state.username,\r\n  \t\tpassword: this.state.password,\r\n  \t}\r\n  \n  \t// this.state.username = username that the user input\r\n  \t// retrieve the user object corresponding the this username from the database\r\n  \t\t// fetch(\r\n  \n  \t\t//) -> return the user object corresponding to the username\r\n  \t// compare user object password with this.state.password\r\n  \t// \r\n  \n  \t// only call this if passwords match\r\n  \tfetch(\"http://localhost:3001/self\", {\r\n  \t\tmethod: 'POST',\r\n  \t\tmode: 'cors',\r\n  \t\theaders: {\r\n  \t\t\t'Content-Type': 'application/json'\r\n  \t\t},\r\n  \t\tbody: JSON.stringify(data)\r\n  \t})\r\n  \t\t.then(res => res.json())\r\n  \t\t.then(res => console.log(res))\r\n  }\r\n  \r\n  retrieveUser() {\r\n         const username = this.state.username;\r\n         //console.log(username);\r\n         fetch(`http://localhost:3001/profiles/${username}`)\r\n  \t\t//.then(response => console.log(response.json()))\r\n             .then(response => response.json())\r\n             .then(response => this.setState({ \r\n  \t\t\tuser: response.username, \r\n  \t\t\tpw: response.password\r\n  \t\t}, () => {\r\n  \t\t\t//console.log(this.state.user)\r\n  \t\t\t//console.log(this.state.pw)\r\n  \t\t}));\r\n     }\r\n  \r\n  checkOnClick()\r\n  {\r\n  \tif (this.state.user == this.state.username) \r\n  \t{\r\n  \t\tif (this.state.pw == this.state.password)\r\n  \t\t{\r\n  \t\t\tthis.handleSubmit()\r\n  \t\t\treturn \"/main\"\r\n  \t\t}\r\n  \t}\r\n  \treturn \"/\"\r\n  }\r\n  \r\n  handleSubmit()\r\n  {\r\n  \treturn this.saveSelf();\r\n  }\r\n  \n  render()\r\n  {\r\n  \tvar page = this.checkOnClick();\r\n  \treturn (\r\n  \t\t\t<body class = \"signin-container\">\r\n  \t\t\t\t<div class = \"signin-shadow\"> </div>\r\n  \t\t\t\t\r\n  \t\t\t\t<div class = \"signin-window\"> \r\n  \t\t\t\t\t<h1 class = \"signin-header\"> User Login </h1>\t\r\n  \t\t\t\t\t\t\r\n  \t\t\t\t\t<form>\r\n  \t\t\t\t\t\t<h2 class = \"signin-label\"> EMAIL </h2>\r\n  \t\t\t\t\t\t<input type=\"form_i\" value={this.state.username} onChange={this.handleChange}/>\r\n  \t\t\t\t\t</form>\r\n  \t\t\t\r\n  \t\t\t\t\t<form>\r\n  \t\t\t\t\t\t<h3 class =\"signin-label\"> PASSWORD </h3>\r\n  \t\t\t\t\t\t<input type=\"form_i\" value={this.state.password} onChange={this.handleChangeP}/>\r\n  \t\t\t\t\t</form>\r\n  \t\t\t\t\t\r\n  \t\t\t\t\t<Link className=\"signin-newAccount\" to={\"/signup\"} > Register an account </Link>\r\n  \t\t\t\t\t\r\n  \t\t\t\t\t<Link type=\"submit_i\" to = {page} onClick={() => this.retrieveUser()} style={{color: '#282b30'}}> Submit </Link>\r\n  \t\t\t\t\t\r\n  \t\t\t\t</div>\r\n  \t\t\t\t\r\n  \t\t\t\t<img class = \"signin-logo\" src = {logo} width=\"75\"/>\r\n  \t\t\t\t\r\n  \t\t\t</body>\r\n  \t);\r\n  }*/\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      user: '',\n      pw: '',\n      click: false,\n      tempu: '',\n      tempp: '',\n      warning: false,\n      case1: false,\n      clicked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeP = this.handleChangeP.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.state.clicked = false;\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  handleChangeP(e) {\n    this.state.clicked = false;\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  saveSelf() {\n    const data = {\n      username: this.state.username,\n      password: this.state.password\n    }; // this.state.username = username that the user input\n    // retrieve the user object corresponding the this username from the database\n    // fetch(\n    //) -> return the user object corresponding to the username\n    // compare user object password with this.state.password\n    // \n    // only call this if passwords match\n\n    fetch(\"http://localhost:3001/self\", {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(res => console.log(res));\n  }\n\n  retrieveUser() {\n    const username = this.state.username; //console.log(username);\n\n    fetch(`http://localhost:3001/profiles/${username}`) //.then(response => console.log(response.json()))\n    .then(response => response.json()).then(response => this.setState({\n      user: response.username,\n      pw: response.password\n    }, () => {//console.log(this.state.user)\n      //console.log(this.state.pw)\n    }));\n  }\n\n  checkOnClick() {\n    if (this.state.user == this.state.username && this.state.user != \"\") {\n      if (this.state.pw == this.state.password) {\n        this.warning = false;\n        this.handleSubmit();\n        return \"/main\"; //console.log(4)\n      } else {\n        this.state.warning = true;\n        this.state.case1 = true;\n        console.log(1);\n      }\n    } else if (this.state.username !== '' && this.state.password !== '') {\n      this.state.warning = true;\n      this.state.case1 = false;\n      console.log(2);\n    }\n\n    return \"/\";\n  }\n\n  handleSubmit() {\n    return this.saveSelf();\n  }\n\n  click() {\n    this.retrieveUser();\n    this.state.clicked = true; //console.log(3);\n  }\n\n  reset_click() {\n    this.state.clicked = false;\n    this.state.warning = false;\n  }\n\n  render() {\n    console.log(this.state.warning, \"w\");\n    console.log(this.state.clicked, \"c\");\n    const vis_style = this.state.warning && this.state.clicked == true ? 'visible' : 'hidden';\n    const message = this.state.case1 ? 'Invalid password. Please try again!' : 'This account does not exist. Please register a new account!';\n    var page = this.checkOnClick();\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      class: \"signin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"signin-shadow\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"signin-window\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"signin-header\",\n          children: \" User Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Click the button twice if first try does not work! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"signin-label\",\n            children: \" USERNAME \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"form_control\",\n              value: this.state.username,\n              onChange: this.handleChange,\n              onkeydown: () => this.reset_click\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            class: \"signin-label\",\n            children: \" PASSWORD \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: this.state.password,\n              onChange: this.handleChangeP,\n              onkeydown: () => this.reset_click\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"signin-newAccount\",\n          to: \"/signup\",\n          children: \" Register an account \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          type: \"submit_i\",\n          to: page,\n          onClick: () => this.click(),\n          style: {\n            color: '#282b30'\n          },\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"signin-logo\",\n        src: logo,\n        width: \"75\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        id: \"warning\",\n        style: {\n          visibility: vis_style\n        },\n        children: [\" \", message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Signin;","map":{"version":3,"sources":["C:/Users/estee/Documents/Petstagram/src/signin.js"],"names":["React","ReactDOM","Link","logo","Signin","Component","constructor","props","state","username","password","user","pw","click","tempu","tempp","warning","case1","clicked","handleChange","bind","handleChangeP","handleSubmit","e","setState","target","value","saveSelf","data","fetch","method","mode","headers","body","JSON","stringify","then","res","json","console","log","retrieveUser","response","checkOnClick","reset_click","render","vis_style","message","page","color","visibility"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from './logo.JPG'; \r\nimport './signin.css';\r\n\r\nclass Signin extends React.Component\r\n{\r\n\t/*constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tuser: '',\r\n\t\t\tpw: '',\r\n\t\t}\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleChangeP = this.handleChangeP.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\t\r\n\thandleChangeP(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n\t}\r\n\r\n\tsaveSelf() {\r\n\t\tconst data = {\r\n\t\t\tusername: this.state.username,\r\n\t\t\tpassword: this.state.password,\r\n\t\t}\r\n\r\n\t\t// this.state.username = username that the user input\r\n\t\t// retrieve the user object corresponding the this username from the database\r\n\t\t\t// fetch(\r\n\r\n\t\t\t//) -> return the user object corresponding to the username\r\n\t\t// compare user object password with this.state.password\r\n\t\t// \r\n\r\n\t\t// only call this if passwords match\r\n\t\tfetch(\"http://localhost:3001/self\", {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'cors',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(res => console.log(res))\r\n\t}\r\n\t\r\n\tretrieveUser() {\r\n        const username = this.state.username;\r\n        //console.log(username);\r\n        fetch(`http://localhost:3001/profiles/${username}`)\r\n\t\t\t//.then(response => console.log(response.json()))\r\n            .then(response => response.json())\r\n            .then(response => this.setState({ \r\n\t\t\t\tuser: response.username, \r\n\t\t\t\tpw: response.password\r\n\t\t\t}, () => {\r\n\t\t\t\t//console.log(this.state.user)\r\n\t\t\t\t//console.log(this.state.pw)\r\n\t\t\t}));\r\n    }\r\n\t\r\n\tcheckOnClick()\r\n\t{\r\n\t\tif (this.state.user == this.state.username) \r\n\t\t{\r\n\t\t\tif (this.state.pw == this.state.password)\r\n\t\t\t{\r\n\t\t\t\tthis.handleSubmit()\r\n\t\t\t\treturn \"/main\"\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn \"/\"\r\n\t}\r\n\t\r\n\thandleSubmit()\r\n\t{\r\n\t\treturn this.saveSelf();\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tvar page = this.checkOnClick();\r\n\t\treturn (\r\n\t\t\t\t<body class = \"signin-container\">\r\n\t\t\t\t\t<div class = \"signin-shadow\"> </div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class = \"signin-window\"> \r\n\t\t\t\t\t\t<h1 class = \"signin-header\"> User Login </h1>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<h2 class = \"signin-label\"> EMAIL </h2>\r\n\t\t\t\t\t\t\t<input type=\"form_i\" value={this.state.username} onChange={this.handleChange}/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<h3 class =\"signin-label\"> PASSWORD </h3>\r\n\t\t\t\t\t\t\t<input type=\"form_i\" value={this.state.password} onChange={this.handleChangeP}/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Link className=\"signin-newAccount\" to={\"/signup\"} > Register an account </Link>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Link type=\"submit_i\" to = {page} onClick={() => this.retrieveUser()} style={{color: '#282b30'}}> Submit </Link>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<img class = \"signin-logo\" src = {logo} width=\"75\"/>\r\n\t\t\t\t\t\r\n\t\t\t\t</body>\r\n\t\t);\r\n\t}*/\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tuser: '',\r\n\t\t\tpw: '',\r\n\t\t\tclick: false,\r\n\t\t\ttempu : '',\r\n\t\t\ttempp :'',\r\n\t\t\twarning: false,\r\n\t\t\tcase1: false,\r\n\t\t\tclicked: false\r\n\t\t}\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleChangeP = this.handleChangeP.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tthis.state.clicked = false;\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\t\r\n\thandleChangeP(e) {\r\n\t\tthis.state.clicked = false;\r\n\t\tthis.setState({password: e.target.value})\r\n\t}\r\n\r\n\tsaveSelf() {\r\n\t\tconst data = {\r\n\t\t\tusername: this.state.username,\r\n\t\t\tpassword: this.state.password,\r\n\t\t}\r\n\r\n\t\t// this.state.username = username that the user input\r\n\t\t// retrieve the user object corresponding the this username from the database\r\n\t\t\t// fetch(\r\n\r\n\t\t\t//) -> return the user object corresponding to the username\r\n\t\t// compare user object password with this.state.password\r\n\t\t// \r\n\r\n\t\t// only call this if passwords match\r\n\t\tfetch(\"http://localhost:3001/self\", {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'cors',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(res => console.log(res))\r\n\t}\r\n\t\r\n\tretrieveUser() {\r\n        const username = this.state.username;\r\n        //console.log(username);\r\n        fetch(`http://localhost:3001/profiles/${username}`)\r\n\t\t\t//.then(response => console.log(response.json()))\r\n            .then(response => response.json())\r\n            .then(response => \r\n\t\t\tthis.setState({ \r\n\t\t\t\tuser: response.username, \r\n\t\t\t\tpw: response.password\r\n\t\t\t}, () => { \r\n\t\t\t\t//console.log(this.state.user)\r\n\t\t\t\t//console.log(this.state.pw)\r\n\t\t\t}));\r\n    }\r\n\t\r\n\tcheckOnClick()\r\n\t{\r\n\t\tif ((this.state.user == this.state.username) && this.state.user != \"\") \r\n\t\t{\r\n\t\t\tif (this.state.pw == this.state.password)\r\n\t\t\t{\r\n                this.warning = false;\r\n\t\t\t\tthis.handleSubmit()\r\n\t\t\t\treturn \"/main\";\r\n\t\t\t\t//console.log(4)\r\n\t\t\t} else {\r\n\t\t\t\tthis.state.warning = true;\r\n\t\t\t\tthis.state.case1 = true;\r\n\t\t\t\tconsole.log(1)\r\n\t\t\t}\r\n\t\t} else if (this.state.username !== '' && this.state.password !== '') {\r\n\t\t\tthis.state.warning = true;\r\n\t\t\tthis.state.case1 = false;\r\n\t\t\tconsole.log(2);\r\n\t\t}\r\n\t\treturn \"/\";\r\n\t}\r\n\t\r\n\thandleSubmit()\r\n\t{\r\n\t\treturn this.saveSelf();\r\n\t}\r\n\t\r\n\tclick()\r\n\t{\r\n\t\tthis.retrieveUser();\r\n\t\tthis.state.clicked = true;\r\n\t\t//console.log(3);\r\n\t}\r\n\r\n\treset_click() {\r\n\t\tthis.state.clicked = false;\r\n\t\tthis.state.warning = false;\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconsole.log(this.state.warning, \"w\");\r\n\t\tconsole.log(this.state.clicked, \"c\");\r\n\t\tconst vis_style = (this.state.warning && this.state.clicked == true) ? 'visible' : 'hidden';\r\n\t\tconst message = this.state.case1 ? 'Invalid password. Please try again!' : 'This account does not exist. Please register a new account!';\r\n\t\tvar page = this.checkOnClick();\r\n\t\treturn (\r\n\t\t\t\t<body class = \"signin-container\">\r\n\t\t\t\t\t<div class = \"signin-shadow\"> </div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class = \"signin-window\"> \r\n\t\t\t\t\t\t<h1 class = \"signin-header\"> User Login </h1>\t\r\n\t\t\t\t\t<h6> Click the button twice if first try does not work! </h6>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<h2 class = \"signin-label\"> USERNAME </h2>\r\n\t\t\t\t\t\t\t<div class = \"username\">\r\n\t\t\t\t\t\t\t<input type=\"form_control\" value={this.state.username} onChange={this.handleChange} onkeydown={() => this.reset_click}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<h3 class =\"signin-label\"> PASSWORD </h3>\r\n\t\t\t\t\t\t\t<div class = \"username\">\r\n\t\t\t\t\t\t\t<input type=\"password\" value={this.state.password} onChange={this.handleChangeP} onkeydown={() => this.reset_click}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Link className=\"signin-newAccount\" to={\"/signup\"} > Register an account </Link>\r\n                        \r\n\t\t\t\t\t\t<Link type=\"submit_i\" to = {page} onClick={() => this.click()} style={{color: '#282b30'}}> Submit </Link>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<img class = \"signin-logo\" src = {logo} width=\"75\"/>\r\n\t\t\t\t\t<h5 id=\"warning\" style={{visibility: vis_style}}> {message} </h5>\r\n\t\t\t\t</body>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}